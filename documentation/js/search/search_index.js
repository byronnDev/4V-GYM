var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ActivitiesComponent.html",[0,0.441,1,0.73]],["body/components/ActivitiesComponent.html",[0,0.413,1,0.944,2,0.829,3,0.278,4,0.278,5,1.058,6,0.581,7,0.581,8,0.235,9,0.793,10,1.567,11,2,12,0.581,13,1.545,14,1.545,15,1.176,16,2,17,2,18,2,19,1.668,20,0.058,21,2,22,2,23,0.829,24,1.567,25,2,26,2.762,27,2,28,2,29,2,30,1.515,31,2.762,32,3.088,33,0.925,34,2,35,2,36,2.762,37,2.762,38,1.461,39,1.661,40,1.461,41,3.164,42,2.762,43,2.304,44,2,45,2,46,1.101,47,1.461,48,2,49,1.461,50,2,51,0.771,52,1.668,53,1.668,54,0.536,55,2,56,2.762,57,1.058,58,2,59,2.32,60,2,61,2,62,1.307,63,1.935,64,1.567,65,2.32,66,1.935,67,2.32,68,2.32,69,1.567,70,1.567,71,2.32,72,2.32,73,0.581,74,1.19,75,0.75,76,2.73,77,1.962,78,1.935,79,0.944,80,1.647,81,1.307,82,1.19,83,2.718,84,1.673,85,0.829,86,1.19,87,1.19,88,1.19,89,1.19,90,1.19,91,1.567,92,1.158,93,1.19,94,0.829,95,1.19,96,1.19,97,1.19,98,1.545,99,1.545,100,1.19,101,1.095,102,1.19,103,1.19,104,1.567,105,1.567,106,1.567,107,1.567,108,1.567,109,1.567,110,1.19,111,1.567,112,1.668,113,1.19,114,1.19,115,1.19,116,0.718,117,1.19,118,0.829,119,1.095,120,0.829,121,0.829,122,1.567,123,1.19,124,1.19,125,1.19,126,0.854,127,1.567,128,0.235,129,1.113,130,0.581,131,1.567,132,0.951,133,1.567,134,0.951,135,1.567,136,0.951,137,1.113,138,0.793,139,1.307,140,0.675,141,0.458,142,0.458,143,1.668,144,1.113,145,1.935,146,0.951,147,0.793,148,0.951,149,0.951,150,2,151,2,152,0.829,153,0.951,154,0.503,155,0.793,156,2.32,157,1.058,158,2,159,2,160,1.095,161,2,162,1.822,163,0.951,164,0.718,165,0.503,166,1.567,167,0.503,168,1.567,169,0.793,170,0.951,171,1.567,172,0.436,173,0.793,174,0.951,175,1.307,176,1.307,177,0.503,178,0.951,179,1.567,180,0.718,181,2.32,182,2.32,183,2.566,184,1.567,185,0.951,186,0.951,187,0.951,188,0.951,189,0.951,190,0.951,191,0.951,192,0.951,193,0.951,194,0.951,195,0.951,196,0.951,197,0.951,198,0.951,199,2,200,1.567,201,0.951,202,1.567,203,0.951,204,0.951,205,0.951,206,0.951,207,0.951,208,0.951,209,0.951,210,0.503,211,0.951,212,0.793,213,0.793,214,1.567,215,1.307,216,1.567,217,1.567,218,1.567,219,1.567,220,0.951,221,0.951,222,0.951,223,0.793,224,0.951,225,0.793,226,0.503,227,0.675,228,0.793,229,0.503,230,0.436,231,0.958,232,0.958,233,0.581,234,1.418,235,0.581,236,1.19,237,0.581,238,0.436,239,0.581,240,0.436,241,0.581,242,0.581,243,0.436,244,0.581,245,0.436,246,0.581,247,0.581,248,0.021,249,0.021]],["title/modules/ActivitiesModule.html",[229,1.129,250,1.781]],["body/modules/ActivitiesModule.html",[0,0.438,1,1.288,3,0.407,4,0.407,5,0.737,8,0.345,9,1.162,10,1.393,11,2.123,13,0.737,14,0.737,15,1.319,16,1.393,17,1.393,18,1.393,19,1.162,20,0.058,21,1.393,22,1.393,23,0.737,24,1.393,25,1.393,26,2.123,27,1.393,28,1.393,29,1.393,30,1.543,31,2.123,32,2.722,33,0.808,34,1.393,35,1.393,36,2.123,37,2.123,38,1.522,39,1.555,40,1.123,41,2.573,42,2.123,43,1.771,44,1.393,45,1.393,46,0.621,47,1.123,48,1.393,49,1.123,50,1.393,51,0.74,52,1.162,53,1.162,55,1.393,56,2.573,57,0.737,58,1.393,59,2.123,60,1.393,61,1.393,63,1.162,65,1.393,66,1.162,67,1.393,68,1.393,71,1.393,72,1.393,75,0.992,81,1.162,85,0.737,91,1.393,92,1.02,94,0.737,98,0.737,99,0.737,101,1.141,104,1.393,105,1.393,106,1.393,107,1.393,108,1.393,109,1.393,111,1.393,112,1.771,116,0.638,118,0.737,119,1.228,120,0.737,121,0.737,122,1.393,126,0.992,127,2.123,128,0.345,129,1.508,130,0.851,131,2.123,132,1.393,133,2.123,134,1.393,135,2.123,136,1.393,137,1.508,138,1.162,139,1.771,140,0.989,141,0.621,142,0.621,143,2.146,144,1.508,145,2.4,146,1.393,147,1.02,148,1.393,149,1.393,150,2.573,151,2.573,152,1.123,153,1.393,154,0.737,155,1.162,156,2.877,157,1.361,158,2.573,159,2.573,160,1.294,161,2.573,162,2.2,163,1.393,164,0.973,165,0.737,166,2.123,167,0.737,168,2.123,169,1.162,170,1.393,171,2.123,172,0.638,173,1.162,174,1.393,175,1.771,176,1.771,177,0.737,178,1.393,179,2.123,180,0.973,181,2.877,182,2.877,183,3.097,184,2.123,185,1.393,186,1.393,187,1.393,188,1.393,189,1.393,190,1.393,191,1.393,192,1.393,193,1.393,194,1.393,195,1.393,196,1.393,197,1.393,198,1.393,199,2.573,200,2.123,201,1.393,202,2.123,203,1.393,204,1.393,205,1.393,206,1.393,207,1.393,208,1.393,209,1.393,210,0.737,211,1.393,212,1.162,213,1.162,214,2.123,215,1.771,216,2.123,217,2.123,218,2.123,219,2.123,220,1.393,221,1.393,222,1.393,223,1.162,224,1.393,225,2.146,226,0.737,227,1.827,228,2.146,229,1.896,230,0.638,248,0.028,249,0.028,250,1.162,251,1.162,252,0.851,253,1.393,254,1.393,255,1.393,256,1.393,257,1.393,258,2.123,259,1.393,260,1.393]],["title/interfaces/Activity.html",[30,0.847,261,0.847]],["body/interfaces/Activity.html",[3,0.508,4,0.508,8,0.43,15,0.796,20,0.058,30,1.507,33,0.43,38,1.695,39,1.146,40,0.919,46,0.993,47,0.919,49,1.695,51,0.851,54,0.855,57,0.919,73,1.062,75,0.508,79,1.318,84,1.871,85,0.919,92,1.347,94,0.919,101,1.565,116,1.71,118,1.871,119,1.403,120,1.871,121,1.871,126,0.508,128,0.43,141,0.993,142,0.508,147,0.689,152,0.919,154,1.695,157,0.919,160,1.347,164,1.872,165,1.928,167,1.928,172,0.796,180,1.469,210,0.919,248,0.033,249,0.033,261,1.162,262,1.234,263,0.919,264,0.919,265,1.146,266,1.529,267,1.234,268,1.529,269,1.529,270,1.529,271,2.076,272,1.959,273,1.234,274,1.234,275,1.062,276,1.234,277,1.234,278,1.791,279,1.234,280,1.234,281,1.234,282,1.234,283,1.234,284,1.234,285,1.234,286,1.234,287,1.234,288,1.234,289,1.234,290,1.234,291,2.081,292,1.234,293,1.234,294,1.234,295,1.234,296,1.234,297,1.234,298,1.234,299,1.234,300,1.234,301,1.234,302,1.234,303,1.234,304,1.234,305,1.234,306,1.234,307,1.234,308,1.234,309,1.062,310,1.234,311,1.234,312,1.234,313,1.234,314,1.234,315,1.234,316,1.234,317,1.776,318,1.234,319,1.234,320,1.234,321,1.234,322,1.234,323,1.234,324,1.234,325,1.234,326,1.234,327,1.234,328,1.234]],["title/interfaces/ActivityType.html",[101,0.847,261,0.847]],["body/interfaces/ActivityType.html",[3,0.518,4,0.518,8,0.438,15,0.812,20,0.058,30,1.487,33,0.438,38,1.71,39,1.162,40,0.937,46,0.866,47,0.937,49,1.939,51,0.831,54,0.867,57,0.937,73,1.082,75,0.518,79,1.365,84,1.883,85,0.937,92,1.357,94,0.937,101,1.487,116,1.775,118,1.341,119,1.412,120,1.883,121,1.883,126,0.518,128,0.438,141,1.001,142,0.518,147,0.702,152,0.937,154,1.71,157,0.937,160,1.357,164,1.877,165,1.71,167,1.71,172,0.812,180,1.482,210,0.937,248,0.033,249,0.033,261,1.175,262,1.258,263,0.937,264,0.937,265,1.162,266,1.977,267,1.258,268,1.55,269,1.55,270,1.55,271,2.092,272,1.977,273,1.258,274,1.258,275,1.082,276,1.258,277,1.258,278,1.81,279,1.258,280,1.258,281,1.258,282,1.258,283,1.258,284,1.258,285,1.258,286,1.258,287,1.258,288,1.258,289,1.258,290,1.258,291,2.103,292,1.258,293,1.258,294,1.258,295,1.258,296,1.258,297,1.258,298,1.258,299,1.258,300,1.258,301,1.258,302,1.258,303,1.258,304,1.258,305,1.258,306,1.258,307,1.258,308,1.258,309,1.082,310,1.258,311,1.258,312,1.258,313,1.258,314,1.258,315,1.258,316,1.258,317,1.801,318,1.258,319,1.258,320,1.258,321,1.258,322,1.258,323,1.258,324,1.258,325,1.258,326,1.258,327,1.258,328,1.258]],["title/components/AppComponent.html",[0,0.441,238,0.978]],["body/components/AppComponent.html",[0,0.724,1,1.083,2,1.676,3,0.719,4,0.719,5,1.856,6,1.502,7,1.502,8,0.609,12,1.502,13,2.114,14,2.114,20,0.057,23,1.676,33,0.609,46,0.719,51,0.507,54,1.083,76,1.746,79,1.083,92,0.975,98,1.3,99,1.3,126,1.169,128,0.609,129,2.492,130,1.502,141,0.719,142,0.719,177,1.676,226,1.676,230,1.127,231,1.938,232,1.938,233,1.502,234,2.266,235,1.502,237,1.502,238,1.699,239,1.502,240,1.608,241,1.938,242,1.502,243,1.608,244,1.502,245,1.453,246,1.502,247,1.502,248,0.042,249,0.042,275,1.938,329,2.458,330,2.251,331,3.968,332,4.392,333,2.644,334,2.644,335,3.077,336,2.458,337,3.077,338,2.458,339,2.458,340,2.05,341,3.077,342,3.077]],["title/components/FooterSelectorsComponent.html",[0,0.441,240,0.978]],["body/components/FooterSelectorsComponent.html",[0,0.733,1,0.861,2,1.703,3,0.737,4,0.737,5,1.878,6,1.54,7,1.54,8,0.624,12,1.54,13,2.126,14,2.126,20,0.057,23,1.703,51,0.52,79,1.101,126,1.131,128,0.624,141,0.737,142,0.737,177,1.703,226,1.703,229,1.878,230,1.155,231,1.969,232,1.969,233,1.54,234,2.287,235,1.54,237,1.54,238,1.155,239,1.54,240,1.715,241,2.17,242,1.54,243,1.155,244,1.54,245,1.715,246,1.54,247,1.54,248,0.042,249,0.042,330,2.287,338,2.52,339,2.52,340,2.102,343,2.52,344,2.52,345,4.032,346,4.444,347,4.444,348,4.444,349,4.444,350,4.444,351,4.444,352,3.155,353,3.155]],["title/injectables/GlobalApiService.html",[75,0.624,265,0.978]],["body/injectables/GlobalApiService.html",[3,0.424,4,0.424,8,0.359,15,1.209,20,0.058,30,1.587,33,0.359,38,1.554,39,1.519,40,0.767,46,1.08,47,1.395,49,1.554,51,0.851,54,0.748,57,1.158,62,1.826,63,1.826,64,2.189,70,2.189,73,1.612,75,0.64,76,2.76,78,2.87,79,1.367,80,2.444,83,3.082,84,2.012,85,1.158,92,1.365,94,1.158,101,1.405,116,1.662,118,1.158,119,1.315,120,1.753,121,1.753,126,0.424,128,0.359,141,0.922,142,0.424,147,0.575,152,0.767,154,1.554,157,0.767,160,1.25,164,1.796,165,1.554,167,1.554,172,0.665,180,1.346,210,0.767,248,0.029,249,0.029,261,1.046,263,2.073,264,0.767,265,1.003,266,1.338,267,1.03,268,1.338,269,1.338,270,1.338,271,1.927,272,1.795,273,1.03,274,1.03,275,0.887,276,1.03,277,1.03,278,1.612,279,1.03,280,1.03,281,1.03,282,1.03,283,1.03,284,1.03,285,1.03,286,1.03,287,1.03,288,1.03,289,1.03,290,1.03,291,1.873,292,1.03,293,1.03,294,1.03,295,1.03,296,1.03,297,1.03,298,1.03,299,1.03,300,1.03,301,1.03,302,1.03,303,2.086,304,2.086,305,1.555,306,1.03,307,1.03,308,1.03,309,0.887,310,1.03,311,1.555,312,1.03,313,1.03,314,1.03,315,1.555,316,1.03,317,1.555,318,1.03,319,2.086,320,1.03,321,1.03,322,1.555,323,1.03,324,1.03,325,1.555,326,1.555,327,1.03,328,1.03,354,1.816,355,2.741,356,2.189,357,2.741,358,2.189,359,2.741,360,1.816,361,1.816,362,1.816,363,1.816,364,1.816,365,1.816,366,1.816,367,1.816,368,1.816,369,1.816,370,1.816,371,1.816]],["title/components/HeaderComponent.html",[0,0.441,243,0.978]],["body/components/HeaderComponent.html",[0,0.754,1,0.916,2,1.772,3,0.784,4,0.784,5,1.932,6,1.639,7,1.639,8,0.664,12,1.639,13,2.155,14,2.155,20,0.057,23,1.772,51,0.554,79,1.145,126,0.979,128,0.664,141,0.784,142,0.784,177,1.772,226,1.772,230,1.229,231,2.047,232,2.047,233,1.639,234,2.339,235,1.639,237,1.639,238,1.229,239,1.639,240,1.229,241,1.639,242,1.639,243,1.754,244,1.639,245,1.229,246,1.639,247,1.639,248,0.044,249,0.044,330,2.379,333,3.047,334,3.047,372,2.681,373,4.193,374,4.573,375,3.357]],["title/interfaces/Monitors.html",[51,0.441,261,0.847]],["body/interfaces/Monitors.html",[3,0.505,4,0.505,8,0.428,15,0.792,20,0.058,30,1.478,33,0.428,38,1.691,39,1.142,40,0.914,46,0.991,47,0.914,49,1.691,51,0.833,54,0.852,57,0.914,73,1.057,75,0.505,79,1.36,80,2.271,84,1.868,85,0.914,92,1.578,94,0.914,101,1.444,116,1.707,118,1.318,119,1.401,120,1.868,121,1.868,126,0.505,128,0.428,141,0.991,142,0.505,147,0.686,152,0.914,154,1.691,157,0.914,160,1.344,164,1.871,165,1.691,167,1.691,172,0.792,180,1.466,210,0.914,248,0.033,249,0.033,261,1.159,262,1.228,263,0.914,264,0.914,265,1.142,266,1.523,267,1.228,268,1.523,269,1.523,270,1.523,271,2.277,272,2.225,273,2.271,274,1.228,275,1.057,276,1.228,277,1.228,278,1.786,279,1.228,280,1.228,281,1.228,282,1.228,283,1.228,284,1.228,285,1.228,286,1.228,287,1.228,288,1.228,289,1.228,290,1.228,291,2.075,292,1.228,293,1.228,294,1.228,295,1.228,296,1.228,297,1.228,298,1.228,299,1.228,300,1.228,301,1.228,302,1.228,303,1.228,304,1.228,305,1.228,306,1.228,307,1.228,308,1.228,309,1.057,310,1.228,311,1.228,312,1.228,313,1.228,314,1.228,315,1.228,316,1.228,317,1.77,318,1.228,319,1.228,320,1.228,321,1.228,322,1.228,323,1.228,324,1.228,325,1.228,326,1.228,327,1.228,328,1.228]],["title/components/MonitorsComponent.html",[0,0.441,245,0.978]],["body/components/MonitorsComponent.html",[0,0.47,1,0.393,2,0.967,3,0.336,4,0.336,5,1.204,6,0.703,7,0.703,8,0.285,12,0.703,13,1.672,14,1.672,19,1.525,20,0.058,23,0.967,32,1.899,33,0.952,39,1.043,43,2.515,46,1.052,51,0.698,52,1.899,53,1.899,54,0.625,62,1.525,66,2.164,69,2.594,75,0.828,76,2.873,78,1.899,79,1.184,80,1.617,81,1.899,83,3.208,84,1.957,92,1.374,98,1.903,99,1.87,112,1.899,116,1.674,119,0.725,126,0.759,128,0.285,129,1.617,130,0.703,137,1.842,138,0.959,139,1.899,140,0.817,141,0.336,142,0.336,143,2.362,145,2.164,147,0.903,155,2.164,160,1.123,162,1.299,164,0.838,169,0.959,172,0.527,173,1.899,175,2.737,176,1.899,177,1.497,180,1.298,212,1.525,213,1.525,223,1.899,226,0.967,230,0.527,231,1.118,232,1.118,233,0.703,234,1.586,235,0.703,237,0.703,238,0.527,239,0.703,240,0.527,241,0.703,242,0.703,243,0.527,244,0.703,245,1.189,246,0.703,247,0.703,248,0.024,249,0.024,271,2.066,272,1.731,309,0.703,330,1.299,356,1.829,358,1.829,376,1.15,377,3.774,378,3.774,379,2.85,380,2.85,381,2.85,382,4.427,383,2.85,384,3.248,385,3.248,386,3.248,387,3.248,388,2.289,389,3.248,390,3.248,391,3.544,392,3.248,393,3.248,394,3.248,395,3.248,396,3.248,397,3.248,398,1.44,399,2.85,400,2.85,401,2.85,402,2.85,403,1.44,404,2.289,405,1.44,406,2.289,407,1.44,408,1.44,409,1.44,410,1.44,411,1.44,412,2.289,413,1.44,414,1.44,415,1.44,416,3.774,417,1.44,418,1.44,419,1.44,420,1.44,421,3.248,422,3.248,423,1.44,424,1.44,425,2.594,426,1.44,427,1.44,428,3.248,429,1.44,430,2.85,431,2.85,432,2.85,433,2.85,434,3.248,435,3.248,436,3.248,437,2.85,438,1.44,439,2.289,440,1.44,441,2.289,442,1.44,443,1.44,444,1.44,445,1.44,446,1.44,447,1.44,448,1.44,449,1.44,450,1.44,451,2.289,452,1.44,453,1.44,454,1.44,455,1.44]],["title/coverage.html",[456,2.888]],["body/coverage.html",[0,0.826,1,0.966,8,0.7,9,2.358,20,0.056,30,1.121,46,0.827,51,0.584,75,0.827,101,1.121,119,1.121,147,1.673,238,1.296,240,1.296,243,1.296,245,1.296,248,0.046,249,0.046,261,1.484,263,2.062,264,2.062,265,1.296,329,2.827,340,2.358,343,2.827,344,2.827,372,2.827,376,2.827,456,2.827,457,3.539,458,3.539,459,3.539,460,3.539,461,3.539,462,2.827,463,3.539,464,2.827,465,4.683,466,3.539,467,4.333,468,3.539,469,3.539,470,3.539,471,3.539]],["title/dependencies.html",[252,1.565,472,1.497]],["body/dependencies.html",[20,0.057,128,0.752,130,1.857,140,2.158,248,0.048,249,0.048,252,1.857,336,3.039,473,3.804,474,5.277,475,3.804,476,4.526,477,3.804,478,3.804,479,4.526,480,3.615,481,3.804,482,3.804,483,3.804,484,3.804,485,3.804,486,3.804,487,3.804]],["title/miscellaneous/enumerations.html",[488,1.275,489,2.56]],["body/miscellaneous/enumerations.html",[20,0.054,33,0.793,99,2.087,248,0.049,249,0.049,263,1.694,264,1.972,266,2.28,268,2.28,269,2.28,270,2.28,488,2.275,489,3.204,490,4.011]],["title/index.html",[33,0.444,491,1.795,492,1.795]],["body/index.html",[15,1.102,20,0.054,98,1.271,137,1.707,162,2.61,215,2.005,248,0.041,249,0.041,252,1.469,333,2.005,334,2.606,425,2.403,472,2.606,491,2.403,492,2.403,493,3.911,494,3.911,495,3.009,496,3.009,497,3.911,498,3.911,499,3.009,500,3.009,501,3.911,502,3.911,503,3.911,504,4.769,505,3.911,506,3.911,507,3.009,508,3.009,509,4.977,510,4.769,511,4.601,512,5.046,513,3.911,514,3.009,515,3.009,516,5.046,517,3.009,518,3.009,519,3.911,520,3.009,521,3.009,522,3.009,523,3.009,524,3.911,525,2.403,526,3.009,527,3.009,528,3.009,529,3.009,530,3.009,531,3.009,532,3.911,533,3.009,534,3.911,535,3.009,536,3.009,537,3.009,538,3.009,539,3.009,540,3.911,541,3.009,542,3.911,543,3.009,544,3.009,545,3.009,546,3.009,547,3.009,548,3.009,549,3.009,550,3.009,551,3.009,552,3.009,553,3.911,554,3.009,555,3.009,556,3.009,557,3.009,558,3.009,559,3.009,560,3.009,561,3.009,562,3.911,563,3.009,564,3.009,565,3.009,566,3.009,567,3.009,568,3.009,569,3.009,570,3.009,571,3.009,572,3.009,573,3.009,574,3.009]],["title/modules.html",[251,2.409]],["body/modules.html",[20,0.05,229,1.759,248,0.05,249,0.05,251,2.775,480,3.327,575,4.165,576,4.165,577,4.165]],["title/overview.html",[578,2.888]],["body/overview.html",[1,1.429,2,1.603,20,0.054,75,1.127,160,1.432,225,2.529,227,2.153,228,2.529,229,2.211,230,1.389,248,0.047,249,0.047,250,3.011,252,1.853,253,3.032,254,3.032,255,3.032,256,3.032,257,3.032,258,3.61,259,3.032,260,3.032,262,2.153,265,1.389,278,1.853,578,3.032,579,3.795]],["title/properties.html",[54,0.875,472,1.497]],["body/properties.html",[20,0.053,54,1.143,248,0.05,249,0.05,525,3.344,580,4.186]],["title/miscellaneous/variables.html",[144,1.818,488,1.275]],["body/miscellaneous/variables.html",[20,0.055,33,0.797,46,0.941,98,1.703,99,1.703,144,2.286,227,2.286,248,0.049,249,0.049,462,3.22,464,3.74,488,2.286,581,4.03,582,4.03,583,4.03,584,4.682]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":147,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":580,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":122,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["01t10:00:00",{"_index":294,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["01t11:30:00",{"_index":295,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["01t13:30:00",{"_index":296,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["01t15:00:00",{"_index":297,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["01t17:30:00",{"_index":301,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["01t19:00:00",{"_index":302,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["06",{"_index":121,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["1",{"_index":160,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"overview.html":{}}}],["10:00",{"_index":104,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["11:30",{"_index":105,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["123456789",{"_index":290,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["123890567",{"_index":282,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["13:30",{"_index":106,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["15:00",{"_index":107,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["17.0.0",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["17.0.10",{"_index":526,"title":{},"body":{"index.html":{}}}],["17.0.5",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["17:30",{"_index":108,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["19:00",{"_index":109,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["1].id",{"_index":321,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["2",{"_index":38,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["2.3.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":278,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"overview.html":{}}}],["300px",{"_index":22,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["4v",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["5",{"_index":579,"title":{},"body":{"overview.html":{}}}],["666666666",{"_index":285,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["7.8.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["a.id",{"_index":313,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["aceptar",{"_index":52,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["acitivities",{"_index":310,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["actividad",{"_index":45,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["actividades",{"_index":349,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["activites",{"_index":31,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activities",{"_index":15,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"index.html":{}}}],["activities'},{'name",{"_index":237,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["activities/activities.component",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{}}}],["activitiescomponent",{"_index":1,"title":{"components/ActivitiesComponent.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["activitiesmodule",{"_index":229,"title":{"modules/ActivitiesModule.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/FooterSelectorsComponent.html":{},"modules.html":{},"overview.html":{}}}],["activity",{"_index":30,"title":{"interfaces/Activity.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"coverage.html":{}}}],["activity.date_start.gethours",{"_index":203,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activity.date_start.todatestring",{"_index":34,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activity.monitors",{"_index":40,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["activity.monitors.length",{"_index":37,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activitystarthour",{"_index":202,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activitytoupdate",{"_index":200,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activitytoupdate.id",{"_index":206,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activitytype",{"_index":101,"title":{"interfaces/ActivityType.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"coverage.html":{}}}],["activitytypeenum",{"_index":266,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"miscellaneous/enumerations.html":{}}}],["activitytypeenum.bodypump",{"_index":276,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["activitytypeenum.pilates",{"_index":277,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["activitytypeenum.spinning",{"_index":279,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["activitytypes",{"_index":47,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["activitytypeselected",{"_index":55,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["activitytypeselected.numbermonitors",{"_index":148,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["actual_component",{"_index":247,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["add",{"_index":425,"title":{},"body":{"components/MonitorsComponent.html":{},"index.html":{}}}],["addactivity",{"_index":63,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"injectables/GlobalApiService.html":{}}}],["addactivity(activity",{"_index":305,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["additional",{"_index":558,"title":{},"body":{"index.html":{}}}],["addmonitor",{"_index":64,"title":{},"body":{"components/ActivitiesComponent.html":{},"injectables/GlobalApiService.html":{}}}],["addmonitor(monitor",{"_index":85,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["andeer.1@gmail.com",{"_index":287,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["ander",{"_index":286,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["angular",{"_index":510,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["angular/clion",{"_index":528,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":130,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/MonitorsComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":128,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":140,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":132,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["angular/material/core",{"_index":136,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["angular/material/datepicker",{"_index":134,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["angular/material/icon",{"_index":352,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["angular/material/tabs",{"_index":353,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["angular/material/toolbar",{"_index":375,"title":{},"body":{"components/HeaderComponent.html":{}}}],["angular/platform",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":194,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["api",{"_index":173,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["api.service",{"_index":138,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["api.service.ts",{"_index":264,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["api.service.ts:112",{"_index":363,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:116",{"_index":365,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:120",{"_index":360,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:124",{"_index":361,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:128",{"_index":366,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:133",{"_index":368,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:137",{"_index":367,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:141",{"_index":364,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:145",{"_index":369,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:149",{"_index":362,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:35",{"_index":370,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:36",{"_index":371,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["api.service.ts:37",{"_index":359,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["appcomponent",{"_index":238,"title":{"components/AppComponent.html":{}},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":494,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arkaitz",{"_index":283,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["arkaitzcs@gmail.com",{"_index":284,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["array",{"_index":145,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["asignarlos",{"_index":196,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["author",{"_index":571,"title":{},"body":{"index.html":{}}}],["automated",{"_index":555,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":539,"title":{},"body":{"index.html":{}}}],["bodypump",{"_index":268,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":111,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["bootstrap",{"_index":253,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["browse",{"_index":577,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":480,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":563,"title":{},"body":{"index.html":{}}}],["built",{"_index":568,"title":{},"body":{"index.html":{}}}],["button",{"_index":427,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["calendar",{"_index":18,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["calendar_clock",{"_index":348,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["cancelar",{"_index":53,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["card",{"_index":19,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["card.name.tolowercase().startswith(this.searchstring.tolowercase",{"_index":438,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["cards",{"_index":382,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["changemonitornumber",{"_index":65,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["class",{"_index":142,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["cli",{"_index":511,"title":{},"body":{"index.html":{}}}],["client",{"_index":530,"title":{},"body":{"index.html":{}}}],["clone",{"_index":519,"title":{},"body":{"index.html":{}}}],["close",{"_index":212,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["closemodal",{"_index":66,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["cluster_activitiesmodule",{"_index":254,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule_declarations",{"_index":256,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule_exports",{"_index":257,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule_providers",{"_index":255,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["command",{"_index":566,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":129,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/MonitorsComponent.html":{}}}],["component",{"_index":0,"title":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":235,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"overview.html":{}}}],["computers",{"_index":531,"title":{},"body":{"index.html":{}}}],["console.error('invalid",{"_index":224,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["console.error('no",{"_index":220,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["const",{"_index":183,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"components/ActivitiesComponent.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["constructor(globalapi",{"_index":74,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["constructor(private",{"_index":149,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["corresponding",{"_index":198,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["coverage",{"_index":456,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":496,"title":{},"body":{"index.html":{}}}],["currentuser",{"_index":544,"title":{},"body":{"index.html":{}}}],["data",{"_index":223,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["data.email",{"_index":380,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["data.name",{"_index":379,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["data.phone",{"_index":381,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["date",{"_index":118,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["date('2021",{"_index":120,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["date_end",{"_index":167,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["date_start",{"_index":165,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["datos",{"_index":191,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["day",{"_index":29,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["de",{"_index":195,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["declarations",{"_index":225,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"overview.html":{}}}],["default",{"_index":98,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/MonitorsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":76,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"injectables/GlobalApiService.html":{},"components/MonitorsComponent.html":{}}}],["demo",{"_index":16,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["dependencies",{"_index":252,"title":{"dependencies.html":{}},"body":{"modules/ActivitiesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployment",{"_index":559,"title":{},"body":{"index.html":{}}}],["deps",{"_index":551,"title":{},"body":{"index.html":{}}}],["development",{"_index":502,"title":{},"body":{"index.html":{}}}],["directive",{"_index":233,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["directives",{"_index":246,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["disabled",{"_index":535,"title":{},"body":{"index.html":{}}}],["display",{"_index":216,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["documentation",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["don't",{"_index":308,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["dynamic",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["echeverria",{"_index":498,"title":{},"body":{"index.html":{}}}],["element",{"_index":232,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["email",{"_index":271,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["enable",{"_index":536,"title":{},"body":{"index.html":{}}}],["encounter",{"_index":546,"title":{},"body":{"index.html":{}}}],["end",{"_index":182,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["enum",{"_index":267,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["enumerations",{"_index":489,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":503,"title":{},"body":{"index.html":{}}}],["error",{"_index":215,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"index.html":{}}}],["example",{"_index":516,"title":{},"body":{"index.html":{}}}],["execution",{"_index":534,"title":{},"body":{"index.html":{}}}],["executionpolicy",{"_index":542,"title":{},"body":{"index.html":{}}}],["explain",{"_index":554,"title":{},"body":{"index.html":{}}}],["export",{"_index":141,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["exports",{"_index":228,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"overview.html":{}}}],["false",{"_index":112,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["filtered",{"_index":428,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["filteredcards",{"_index":377,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["find",{"_index":197,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["findmonitor",{"_index":355,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["findmonitor(name",{"_index":325,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["first",{"_index":169,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["firstcardindex",{"_index":378,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["following",{"_index":540,"title":{},"body":{"index.html":{}}}],["footer",{"_index":241,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["footerselectorscomponent",{"_index":240,"title":{"components/FooterSelectorsComponent.html":{}},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["formsmodule",{"_index":139,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["found",{"_index":219,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["framework",{"_index":569,"title":{},"body":{"index.html":{}}}],["free",{"_index":42,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["g",{"_index":527,"title":{},"body":{"index.html":{}}}],["generated",{"_index":524,"title":{},"body":{"index.html":{}}}],["getactivities",{"_index":303,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["getdefaultemail",{"_index":384,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["getdefaultindex",{"_index":385,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["getdefaultname",{"_index":386,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["getdefaultphone",{"_index":387,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["getlastid",{"_index":319,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["getmonitors",{"_index":304,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["getting",{"_index":491,"title":{"index.html":{}},"body":{"index.html":{}}}],["git",{"_index":521,"title":{},"body":{"index.html":{}}}],["global",{"_index":137,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{},"index.html":{}}}],["globalapi",{"_index":81,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["globalapiservice",{"_index":75,"title":{"injectables/GlobalApiService.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gym",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["handle",{"_index":214,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["header",{"_index":373,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":244,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["header/header.component",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["headercomponent",{"_index":243,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["help",{"_index":500,"title":{},"body":{"index.html":{}}}],["here",{"_index":561,"title":{},"body":{"index.html":{}}}],["hour",{"_index":199,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["hours",{"_index":56,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["hours[$index",{"_index":36,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["html",{"_index":231,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["https://github.com/mikelecheverria/4vgym.gitinstall",{"_index":522,"title":{},"body":{"index.html":{}}}],["icons/buttons",{"_index":426,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["id",{"_index":164,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["identifier",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["import",{"_index":126,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["imports",{"_index":226,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":218,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["initial",{"_index":572,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":265,"title":{"injectables/GlobalApiService.html":{}},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":354,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["inline",{"_index":17,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["input",{"_index":429,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["inputs",{"_index":432,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["install",{"_index":509,"title":{},"body":{"index.html":{}}}],["installation",{"_index":514,"title":{},"body":{"index.html":{}}}],["installproject",{"_index":523,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":499,"title":{},"body":{"index.html":{}}}],["interface",{"_index":261,"title":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"interfaces/Monitors.html":{}},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"coverage.html":{}}}],["interfaces",{"_index":262,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"interfaces/Monitors.html":{},"overview.html":{}}}],["invalid",{"_index":222,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["ismodalopen",{"_index":43,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["jon",{"_index":288,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["jon@cuatrovientos.org",{"_index":289,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["juan",{"_index":280,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["juan@gmail.com",{"_index":281,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["legacy",{"_index":549,"title":{},"body":{"index.html":{}}}],["legend",{"_index":230,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"overview.html":{}}}],["locally",{"_index":506,"title":{},"body":{"index.html":{}}}],["long",{"_index":28,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["los",{"_index":190,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["m",{"_index":324,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["m.id",{"_index":317,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["m.name",{"_index":328,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["manager",{"_index":513,"title":{},"body":{"index.html":{}}}],["managing",{"_index":495,"title":{},"body":{"index.html":{}}}],["matcardmodule",{"_index":131,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["matching",{"_index":249,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":133,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["maticonmodule",{"_index":347,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["matnativedatemodule",{"_index":135,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["mattabsmodule",{"_index":346,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["mattoolbarmodule",{"_index":374,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":217,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["methods",{"_index":62,"title":{},"body":{"components/ActivitiesComponent.html":{},"injectables/GlobalApiService.html":{},"components/MonitorsComponent.html":{}}}],["mikel",{"_index":497,"title":{},"body":{"index.html":{}}}],["mikelecheverria",{"_index":574,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":488,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":143,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["modalvariablesdefault",{"_index":67,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["module",{"_index":250,"title":{"modules/ActivitiesModule.html":{}},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["modules",{"_index":251,"title":{"modules.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules.html":{}}}],["monitor",{"_index":39,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["monitor.id",{"_index":318,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["monitor.name",{"_index":41,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["monitores",{"_index":351,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["monitorname",{"_index":207,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["monitors",{"_index":51,"title":{"interfaces/Monitors.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["monitors/monitors.component",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{}}}],["monitorscomponent",{"_index":245,"title":{"components/MonitorsComponent.html":{}},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["month",{"_index":27,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["name",{"_index":79,"title":{},"body":{"components/ActivitiesComponent.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["necessary",{"_index":538,"title":{},"body":{"index.html":{}}}],["need",{"_index":508,"title":{},"body":{"index.html":{}}}],["new",{"_index":119,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{}}}],["newactivity",{"_index":57,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["newactivity.id",{"_index":314,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["newactivityhour",{"_index":58,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["ng",{"_index":562,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":127,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["ngoninit",{"_index":68,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["nombre",{"_index":421,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["notes",{"_index":560,"title":{},"body":{"index.html":{}}}],["npm",{"_index":512,"title":{},"body":{"index.html":{}}}],["number",{"_index":116,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["numbermonitors",{"_index":49,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["numbers",{"_index":146,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["numeric",{"_index":26,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["open",{"_index":430,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["openmodal",{"_index":69,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/MonitorsComponent.html":{}}}],["openmodal(hours",{"_index":91,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["openmodaledit",{"_index":388,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["openmodaledit(index",{"_index":404,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["optional",{"_index":80,"title":{},"body":{"components/ActivitiesComponent.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["out",{"_index":260,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["overview",{"_index":578,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":472,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"components/ActivitiesComponent.html":{},"injectables/GlobalApiService.html":{},"components/MonitorsComponent.html":{}}}],["parseint(starthour",{"_index":204,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["peer",{"_index":550,"title":{},"body":{"index.html":{}}}],["person",{"_index":350,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["phone",{"_index":272,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["photo",{"_index":273,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["pilates",{"_index":270,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"miscellaneous/enumerations.html":{}}}],["policy",{"_index":541,"title":{},"body":{"index.html":{}}}],["powershell",{"_index":532,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":507,"title":{},"body":{"index.html":{}}}],["prodto",{"_index":564,"title":{},"body":{"index.html":{}}}],["project",{"_index":505,"title":{},"body":{"index.html":{}}}],["properties",{"_index":54,"title":{"properties.html":{}},"body":{"components/ActivitiesComponent.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"properties.html":{}}}],["provideanimations",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":274,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["providerouter(routes",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":227,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["que",{"_index":189,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["remotesignedif",{"_index":545,"title":{},"body":{"index.html":{}}}],["remove",{"_index":172,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["removeactivity",{"_index":70,"title":{},"body":{"components/ActivitiesComponent.html":{},"injectables/GlobalApiService.html":{}}}],["removeactivity(activity",{"_index":94,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["removemonitor",{"_index":356,"title":{},"body":{"injectables/GlobalApiService.html":{},"components/MonitorsComponent.html":{}}}],["removemonitor(index",{"_index":406,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["removemonitor(monitor",{"_index":315,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["replace",{"_index":210,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["replaceactivity",{"_index":357,"title":{},"body":{"injectables/GlobalApiService.html":{}}}],["replaceactivity(newactivity",{"_index":311,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["repository",{"_index":520,"title":{},"body":{"index.html":{}}}],["reset",{"_index":259,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["restardia",{"_index":71,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["results",{"_index":248,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":180,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["returns",{"_index":83,"title":{},"body":{"components/ActivitiesComponent.html":{},"injectables/GlobalApiService.html":{},"components/MonitorsComponent.html":{}}}],["root",{"_index":275,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["root'},{'name",{"_index":239,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["routeroutlet",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet,headercomponent,footerselectorscomponent",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":504,"title":{},"body":{"index.html":{}}}],["running",{"_index":552,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["scope",{"_index":543,"title":{},"body":{"index.html":{}}}],["script",{"_index":533,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":537,"title":{},"body":{"index.html":{}}}],["scrollleft",{"_index":389,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["scrollright",{"_index":390,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["sean",{"_index":192,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["search",{"_index":391,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["searchstring",{"_index":383,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["select",{"_index":50,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["selected",{"_index":59,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["selected.todatestring",{"_index":35,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["selected.tolocaledatestring('es",{"_index":24,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["selected.tolocaledatestring(\\'es",{"_index":236,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["selectedmonitors",{"_index":60,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["selectedmonitorsname",{"_index":61,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["selectors",{"_index":345,"title":{},"body":{"components/FooterSelectorsComponent.html":{}}}],["selectors'},{'name",{"_index":242,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["selectors.component",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["selectors.component.ts",{"_index":344,"title":{},"body":{"components/FooterSelectorsComponent.html":{},"coverage.html":{}}}],["selectors/footer",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"coverage.html":{}}}],["series",{"_index":515,"title":{},"body":{"index.html":{}}}],["serve",{"_index":567,"title":{},"body":{"index.html":{}}}],["set",{"_index":162,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{},"index.html":{}}}],["setdefaultemail",{"_index":392,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["setdefaultindex",{"_index":393,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["setdefaultname",{"_index":394,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["setdefaultphone",{"_index":395,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["setmonitor",{"_index":396,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["show",{"_index":309,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"injectables/GlobalApiService.html":{},"components/HeaderComponent.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["specified",{"_index":221,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["spinning",{"_index":269,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../global",{"_index":490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/activities/activities.component.ts",{"_index":9,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"coverage.html":{}}}],["src/app/activities/activities.component.ts:159",{"_index":123,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:160",{"_index":110,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:161",{"_index":100,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:162",{"_index":102,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:163",{"_index":114,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:164",{"_index":113,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:166",{"_index":103,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:167",{"_index":125,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:168",{"_index":124,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:169",{"_index":117,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:171",{"_index":115,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:172",{"_index":77,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:196",{"_index":90,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:203",{"_index":97,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:206",{"_index":96,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:210",{"_index":95,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:217",{"_index":93,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:222",{"_index":88,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:227",{"_index":89,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:233",{"_index":87,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:237",{"_index":86,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/activities/activities.component.ts:242",{"_index":82,"title":{},"body":{"components/ActivitiesComponent.html":{}}}],["src/app/app.component.ts",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:23",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer",{"_index":343,"title":{},"body":{"components/FooterSelectorsComponent.html":{},"coverage.html":{}}}],["src/app/global",{"_index":263,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/header/header.component.ts",{"_index":372,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/monitors/monitors.component.ts",{"_index":376,"title":{},"body":{"components/MonitorsComponent.html":{},"coverage.html":{}}}],["src/app/monitors/monitors.component.ts:103",{"_index":419,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:104",{"_index":415,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:106",{"_index":417,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:108",{"_index":418,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:109",{"_index":423,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:111",{"_index":420,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:114",{"_index":400,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:115",{"_index":401,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:116",{"_index":399,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:117",{"_index":402,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:119",{"_index":408,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:125",{"_index":409,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:131",{"_index":410,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:139",{"_index":407,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:144",{"_index":403,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:153",{"_index":398,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:157",{"_index":405,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:166",{"_index":411,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:181",{"_index":414,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["src/app/monitors/monitors.component.ts:187",{"_index":413,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["standalone",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["start",{"_index":181,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["started",{"_index":492,"title":{"index.html":{}},"body":{"index.html":{}}}],["starthour",{"_index":184,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["statements",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["steps",{"_index":517,"title":{},"body":{"index.html":{}}}],["string",{"_index":92,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["sumardia",{"_index":72,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["support",{"_index":575,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":576,"title":{},"body":{"modules.html":{}}}],["system",{"_index":556,"title":{},"body":{"index.html":{}}}],["table",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":518,"title":{},"body":{"index.html":{}}}],["teléfono",{"_index":422,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["template",{"_index":23,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["testdeployment",{"_index":557,"title":{},"body":{"index.html":{}}}],["tests",{"_index":553,"title":{},"body":{"index.html":{}}}],["this.activites",{"_index":150,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.activites.find((activity",{"_index":201,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.activities",{"_index":291,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activities.map(a",{"_index":312,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activities.push(activity",{"_index":306,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activities[this.activities.length",{"_index":320,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activitytypes",{"_index":152,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activitytypes.length",{"_index":170,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.activitytypes[0",{"_index":157,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activitytypes[1",{"_index":292,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activitytypes[2",{"_index":298,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.activitytypeselected",{"_index":156,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.cards",{"_index":416,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.cards[index].id",{"_index":455,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.closemodal",{"_index":213,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["this.email",{"_index":435,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.filteredcards",{"_index":439,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.filteredcards[index].email",{"_index":447,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.filteredcards[index].name",{"_index":446,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.filteredcards[index].phone",{"_index":448,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.firstcardindex",{"_index":437,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.getdefaultindex",{"_index":452,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.globalapi.activities",{"_index":151,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.globalapi.activitytypes",{"_index":153,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.globalapi.addmonitor",{"_index":449,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.globalapi.findmonitor(monitorname",{"_index":208,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.globalapi.getlastid",{"_index":450,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.globalapi.monitors",{"_index":155,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["this.globalapi.removeactivity(activity",{"_index":174,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.globalapi.removemonitor(this.cards[index",{"_index":440,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.globalapi.replaceactivity(this.newactivity",{"_index":211,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.globalapi.updatemonitor(this.cards[index].id",{"_index":454,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.index",{"_index":433,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.ismodalopen",{"_index":176,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["this.modalvariablesdefault",{"_index":178,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.monitors",{"_index":154,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors.filter(m",{"_index":316,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors.find(m",{"_index":327,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors.map(m",{"_index":323,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors.push(monitor",{"_index":307,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors[0",{"_index":293,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors[1",{"_index":300,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.monitors[2",{"_index":299,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["this.name",{"_index":434,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.newactivity",{"_index":163,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.newactivity.date_start.sethours(parseint(starthour.split(':')[0",{"_index":186,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.newactivity.date_start.setminutes(parseint(starthour.split(':')[1",{"_index":187,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.newactivity.id",{"_index":205,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.newactivity.monitors",{"_index":209,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.newactivityhour",{"_index":168,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.newactivityhour.split",{"_index":185,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.numbermonitors",{"_index":159,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.phone",{"_index":436,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.search",{"_index":451,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.selected",{"_index":166,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.selected.setdate(this.selected.getdate",{"_index":171,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.selectedmonitors",{"_index":161,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.selectedmonitors.push(monitor",{"_index":179,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.selectedmonitorsname",{"_index":158,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["this.setdefaultemail",{"_index":444,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.setdefaultindex",{"_index":442,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.setdefaultname",{"_index":443,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.setdefaultphone",{"_index":445,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.setmonitor",{"_index":453,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["this.updatemonitors",{"_index":441,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["tipo",{"_index":44,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["title",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":424,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["track",{"_index":32,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["true",{"_index":177,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["try",{"_index":547,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"components/AppComponent.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.name",{"_index":48,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["undefined",{"_index":326,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["up",{"_index":501,"title":{},"body":{"index.html":{}}}],["update",{"_index":175,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/MonitorsComponent.html":{}}}],["updatemonitor",{"_index":358,"title":{},"body":{"injectables/GlobalApiService.html":{},"components/MonitorsComponent.html":{}}}],["updatemonitor(id",{"_index":322,"title":{},"body":{"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{}}}],["updatemonitor(index",{"_index":412,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["updatemonitors",{"_index":397,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["use",{"_index":565,"title":{},"body":{"index.html":{}}}],["used",{"_index":570,"title":{},"body":{"index.html":{}}}],["using",{"_index":548,"title":{},"body":{"index.html":{}}}],["value",{"_index":99,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"components/AppComponent.html":{},"components/MonitorsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":431,"title":{},"body":{"components/MonitorsComponent.html":{}}}],["var",{"_index":234,"title":{},"body":{"components/ActivitiesComponent.html":{},"components/AppComponent.html":{},"components/FooterSelectorsComponent.html":{},"components/HeaderComponent.html":{},"components/MonitorsComponent.html":{}}}],["variable",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":144,"title":{"miscellaneous/variables.html":{}},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{},"miscellaneous/variables.html":{}}}],["verificar",{"_index":188,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["version",{"_index":525,"title":{},"body":{"index.html":{},"properties.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/ActivitiesComponent.html":{},"interfaces/Activity.html":{},"interfaces/ActivityType.html":{},"injectables/GlobalApiService.html":{},"interfaces/Monitors.html":{},"components/MonitorsComponent.html":{}}}],["válidos",{"_index":193,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["web",{"_index":493,"title":{},"body":{"index.html":{}}}],["width",{"_index":21,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["windows",{"_index":529,"title":{},"body":{"index.html":{}}}],["work",{"_index":573,"title":{},"body":{"index.html":{}}}],["year",{"_index":25,"title":{},"body":{"components/ActivitiesComponent.html":{},"modules/ActivitiesModule.html":{}}}],["zone.js",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":258,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ActivitiesComponent.html":{"url":"components/ActivitiesComponent.html","title":"component - ActivitiesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActivitiesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/activities/activities.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-activities\n            \n\n\n\n\n            \n                styles\n                \n    .demo-inline-calendar-card {\n      width: 300px;\n    }\n  \n            \n\n            \n                template\n                    \n    \n      \n        \n      \n    \n\n    \n    \n      \n          \n            \n          \n          \n            {{selected.toLocaleDateString('es', { year: 'numeric', month: 'long', day: 'numeric' })}}\n          \n            \n          \n      \n      \n      \n        \n          @for (activity of activites; track $index) {\n            @if (activity.date_start.toDateString() === selected.toDateString()) {\n              \n                \n                  {{hours[$index]}}\n                \n              \n              @if (activity.monitors.length) {\n                  \n                    @if (activity.monitors.length == 2) {\n                      @for (monitor of activity.monitors; track $index) {\n                          \n                            \n                            {{ monitor.name }}\n                          \n                      }\n                    } @else {\n                      @for (monitor of activity.monitors; track $index){\n                        \n                          \n                          {{ monitor.name }}\n                        \n                      }\n                      \n                    }\n                    \n                      \n                    \n                    \n                    \n                      \n                    \n                    \n                      \n                    \n                  } @else {\n                    \n                      FREE\n                      \n                        \n                      \n                    \n                  }\n                \n              \n            } @else {\n              \n                \n                  {{hours[$index]}}\n                \n                \n                  \n                    FREE\n                    \n                      \n                    \n                  \n                \n              \n            }\n          }\n        \n      \n    \n\n  \n  @if (isModalOpen) {\n  \n    \n\n      \n        \n          \n          \n            \n            \n          \n          \n          \n            \n            \n              Tipo Actividad\n              @for (type of activityTypes; track $index) {\n                {{type.name}}\n              }\n            \n\n            \n            @for (i of numberMonitors; track $index) {\n              \n                Select a monitor\n                @for (monitor of monitors; track $index) {\n                  {{monitor.name}}\n                }\n              \n            }\n            \n            \n              \n                ACEPTAR\n              \n              \n                CANCELAR\n              \n            \n          \n        \n      \n    \n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activites\n                            \n                            \n                                activityTypes\n                            \n                            \n                                activityTypeSelected\n                            \n                            \n                                hours\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                monitors\n                            \n                            \n                                newActivity\n                            \n                            \n                                newActivityHour\n                            \n                            \n                                numberMonitors\n                            \n                            \n                                selected\n                            \n                            \n                                selectedMonitors\n                            \n                            \n                                selectedMonitorsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActivity\n                            \n                            \n                                addMonitor\n                            \n                            \n                                changeMonitorNumber\n                            \n                            \n                                closeModal\n                            \n                            \n                                modalVariablesDefault\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                removeActivity\n                            \n                            \n                                restarDia\n                            \n                            \n                                sumarDia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalApi: GlobalApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/activities/activities.component.ts:172\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalApi\n                                                  \n                                                        \n                                                                        GlobalApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActivity\n                        \n                    \n                \n            \n            \n                \naddActivity()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:242\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMonitor\n                        \n                    \n                \n            \n            \n                \naddMonitor(monitor: Monitors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:237\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                monitor\n                                            \n                                                            Monitors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Monitors\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonitorNumber\n                        \n                    \n                \n            \n            \n                \nchangeMonitorNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:233\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalVariablesDefault\n                        \n                    \n                \n            \n            \n                \nmodalVariablesDefault()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:227\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(hours: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hours\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActivity\n                        \n                    \n                \n            \n            \n                \nremoveActivity(activity: Activity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            Activity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restarDia\n                        \n                    \n                \n            \n            \n                \nrestarDia()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sumarDia\n                        \n                    \n                \n            \n            \n                \nsumarDia()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/activities/activities.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Activity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivityType[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityTypeSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['10:00 11:30', '13:30 15:00', '17:30 19:00']\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Monitors[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newActivity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Activity\n\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newActivityHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberMonitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date('2021-06-01')\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMonitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Monitors[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMonitorsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/activities/activities.component.ts:167\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, NgModule, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { GlobalApiService, Activity, ActivityType, Monitors } from '../global-api.service';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-activities',\n  template: `\n      \n      \n        \n          \n        \n      \n      \n      \n      \n        \n            \n              \n            \n            \n              {{selected.toLocaleDateString('es', { year: 'numeric', month: 'long', day: 'numeric' })}}\n            \n              \n            \n        \n        \n        \n          \n            @for (activity of activites; track $index) {\n              @if (activity.date_start.toDateString() === selected.toDateString()) {\n                \n                  \n                    {{hours[$index]}}\n                  \n                \n                @if (activity.monitors.length) {\n                    \n                      @if (activity.monitors.length == 2) {\n                        @for (monitor of activity.monitors; track $index) {\n                            \n                              \n                              {{ monitor.name }}\n                            \n                        }\n                      } @else {\n                        @for (monitor of activity.monitors; track $index){\n                          \n                            \n                            {{ monitor.name }}\n                          \n                        }\n                        \n                      }\n                      \n                        \n                      \n                      \n                      \n                        \n                      \n                      \n                        \n                      \n                    } @else {\n                      \n                        FREE\n                        \n                          \n                        \n                      \n                    }\n                  \n                \n              } @else {\n                \n                  \n                    {{hours[$index]}}\n                  \n                  \n                    \n                      FREE\n                      \n                        \n                      \n                    \n                  \n                \n              }\n            }\n          \n        \n      \n\n    \n    @if (isModalOpen) {\n    \n      \n\n        \n          \n            \n            \n              \n              \n            \n            \n            \n              \n              \n                Tipo Actividad\n                @for (type of activityTypes; track $index) {\n                  {{type.name}}\n                }\n              \n              \n              \n              @for (i of numberMonitors; track $index) {\n                \n                  Select a monitor\n                  @for (monitor of monitors; track $index) {\n                    {{monitor.name}}\n                  }\n                \n              }\n              \n              \n                \n                  ACEPTAR\n                \n                \n                  CANCELAR\n                \n              \n            \n          \n        \n      \n    \n  }\n  `,\n  styles: `\n    .demo-inline-calendar-card {\n      width: 300px;\n    }\n  `\n})\nexport class ActivitiesComponent implements OnInit {\n  selected: Date = new Date('2021-06-01');\n  hours = ['10:00 11:30', '13:30 15:00', '17:30 19:00'];\n  activites: Activity[] = [];\n  activityTypes: ActivityType[] = [];\n  monitors: Monitors[] = [];\n  isModalOpen: boolean = false;\n  // Modal variables\n  activityTypeSelected: ActivityType;\n  selectedMonitorsName: string[];\n  selectedMonitors: Monitors[];\n  numberMonitors: number[]; // Array of numbers from 0 to activityTypeSelected.numberMonitors\n\n  newActivity: Activity;\n  newActivityHour: string;\n\n  constructor(private globalApi: GlobalApiService) {\n    this.activites = this.globalApi.activities;\n    this.activityTypes = this.globalApi.activityTypes;\n    this.monitors = this.globalApi.monitors;\n\n    // Modal variables\n    this.activityTypeSelected = this.activityTypes[0];\n    this.selectedMonitorsName = [];\n    this.numberMonitors = [1, 2];\n    this.selectedMonitors = [];\n\n    // Set the new activity\n    this.newActivity = {\n      id: -1,\n      date_start: this.selected,\n      date_end: this.selected,\n      monitors: [],\n      activityType: this.activityTypeSelected\n    };\n    this.newActivityHour = '';\n  }\n\n  ngOnInit() {\n    // Set the first activity type as the default value\n    if (this.activityTypes && this.activityTypes.length > 0) {\n      this.activityTypeSelected = this.activityTypes[0];\n    }\n  }\n\n  sumarDia() {\n    this.selected.setDate(this.selected.getDate() + 1);\n  }\n  restarDia() {\n    this.selected.setDate(this.selected.getDate() - 1);\n  }\n\n  removeActivity(activity: Activity) {\n    // Remove the activity from the global api\n    this.globalApi.removeActivity(activity);\n    // Update the activities array\n    this.activites = this.globalApi.activities;\n  }\n\n  openModal(hours: string) {\n    this.isModalOpen = true;\n    this.newActivityHour = hours;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n    this.modalVariablesDefault();\n  }\n\n  modalVariablesDefault() {\n    this.activityTypeSelected = this.activityTypes[0];\n    this.selectedMonitorsName = [];\n    this.numberMonitors = [1, 2];\n  }\n\n  changeMonitorNumber() {\n    this.numberMonitors = [1, 2];\n  }\n\n  addMonitor(monitor: Monitors) {\n    this.selectedMonitors.push(monitor);\n    return monitor;\n  }\n\n  addActivity() {\n    // Set the start and end hours\n    const startHour = this.newActivityHour.split(' ')[0];\n    this.newActivity.date_start.setHours(parseInt(startHour.split(':')[0]));\n    this.newActivity.date_start.setMinutes(parseInt(startHour.split(':')[1]));\n\n    // Verificar que los datos sean válidos antes de asignarlos\n    if (startHour) {\n      // Find the activity with the corresponding start and end hour\n      const activityToUpdate = this.activites.find((activity) => {\n        const activityStartHour = activity.date_start.getHours();\n        return activityStartHour === parseInt(startHour);\n      });\n\n      if (activityToUpdate) {\n        // Set id to the new activity\n        this.newActivity.id = activityToUpdate.id;\n\n        // Selected monitors\n        this.selectedMonitors = [];\n        for (const monitorName of this.selectedMonitorsName) {\n          const monitor = this.globalApi.findMonitor(monitorName);\n          if (monitor) {\n            this.selectedMonitors.push(monitor);\n          }\n        }\n\n        // Set monitors to the new activity\n        this.newActivity.monitors = this.selectedMonitors;\n\n        // Replace the activity with the new activity in the activities array\n        this.globalApi.replaceActivity(this.newActivity);\n\n        // Update the activities array\n        this.activites = this.globalApi.activities;\n\n        // Close the modal\n        this.closeModal();\n      } else {\n        // Handle error or display a message indicating that no activity was found\n        console.error('No activity found for the specified start and end hour');\n      }\n    } else {\n      // Handle error or display a message indicating invalid data\n      console.error('Invalid start or end hour');\n    }\n  }\n}\n\n@NgModule({\n  declarations: [ActivitiesComponent],\n  imports: [CommonModule, MatCardModule, MatDatepickerModule, MatNativeDateModule, FormsModule],\n  providers: [GlobalApiService],\n  exports: [ActivitiesComponent]\n})\nexport class ActivitiesModule { }\n    \n\n\n    \n            \n    .demo-inline-calendar-card {\n      width: 300px;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{selected.toLocaleDateString(\\'es\\', { year: \\'numeric\\', month: \\'long\\', day: \\'numeric\\' })}}                                                                    @for (activity of activites; track $index) {            @if (activity.date_start.toDateString() === selected.toDateString()) {                                                {{hours[$index]}}                                            @if (activity.monitors.length) {                                      @if (activity.monitors.length == 2) {                      @for (monitor of activity.monitors; track $index) {                                                                                  {{ monitor.name }}                                                }                    } @else {                      @for (monitor of activity.monitors; track $index){                                                                            {{ monitor.name }}                                              }                                          }                                                                                                                                                                                                                                } @else {                                          FREE                                                                                                          }                                          } @else {                                                {{hours[$index]}}                                                                      FREE                                                                                                                          }          }                      @if (isModalOpen) {                                                                                                                                    Tipo Actividad              @for (type of activityTypes; track $index) {                {{type.name}}              }                                    @for (i of numberMonitors; track $index) {                              Select a monitor                @for (monitor of monitors; track $index) {                  {{monitor.name}}                }                          }                                                      ACEPTAR                                            CANCELAR                                                        }'\n    var COMPONENTS = [{'name': 'ActivitiesComponent', 'selector': 'app-activities'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterSelectorsComponent', 'selector': 'app-footer-selectors'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MonitorsComponent', 'selector': 'app-monitors'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActivitiesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActivitiesModule.html":{"url":"modules/ActivitiesModule.html","title":"module - ActivitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    ActivitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivitiesModule\n\n\n\ncluster_ActivitiesModule_providers\n\n\n\ncluster_ActivitiesModule_declarations\n\n\n\ncluster_ActivitiesModule_exports\n\n\n\n\nActivitiesComponent\n\nActivitiesComponent\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nActivitiesModule -->\n\nActivitiesComponent->ActivitiesModule\n\n\n\n\n\nActivitiesComponent \n\nActivitiesComponent \n\nActivitiesComponent  -->\n\nActivitiesModule->ActivitiesComponent \n\n\n\n\n\nGlobalApiService\n\nGlobalApiService\n\nActivitiesModule -->\n\nGlobalApiService->ActivitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/activities/activities.component.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActivitiesComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GlobalApiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActivitiesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Component, NgModule, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { GlobalApiService, Activity, ActivityType, Monitors } from '../global-api.service';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-activities',\n  template: `\n      \n      \n        \n          \n        \n      \n      \n      \n      \n        \n            \n              \n            \n            \n              {{selected.toLocaleDateString('es', { year: 'numeric', month: 'long', day: 'numeric' })}}\n            \n              \n            \n        \n        \n        \n          \n            @for (activity of activites; track $index) {\n              @if (activity.date_start.toDateString() === selected.toDateString()) {\n                \n                  \n                    {{hours[$index]}}\n                  \n                \n                @if (activity.monitors.length) {\n                    \n                      @if (activity.monitors.length == 2) {\n                        @for (monitor of activity.monitors; track $index) {\n                            \n                              \n                              {{ monitor.name }}\n                            \n                        }\n                      } @else {\n                        @for (monitor of activity.monitors; track $index){\n                          \n                            \n                            {{ monitor.name }}\n                          \n                        }\n                        \n                      }\n                      \n                        \n                      \n                      \n                      \n                        \n                      \n                      \n                        \n                      \n                    } @else {\n                      \n                        FREE\n                        \n                          \n                        \n                      \n                    }\n                  \n                \n              } @else {\n                \n                  \n                    {{hours[$index]}}\n                  \n                  \n                    \n                      FREE\n                      \n                        \n                      \n                    \n                  \n                \n              }\n            }\n          \n        \n      \n\n    \n    @if (isModalOpen) {\n    \n      \n\n        \n          \n            \n            \n              \n              \n            \n            \n            \n              \n              \n                Tipo Actividad\n                @for (type of activityTypes; track $index) {\n                  {{type.name}}\n                }\n              \n              \n              \n              @for (i of numberMonitors; track $index) {\n                \n                  Select a monitor\n                  @for (monitor of monitors; track $index) {\n                    {{monitor.name}}\n                  }\n                \n              }\n              \n              \n                \n                  ACEPTAR\n                \n                \n                  CANCELAR\n                \n              \n            \n          \n        \n      \n    \n  }\n  `,\n  styles: `\n    .demo-inline-calendar-card {\n      width: 300px;\n    }\n  `\n})\nexport class ActivitiesComponent implements OnInit {\n  selected: Date = new Date('2021-06-01');\n  hours = ['10:00 11:30', '13:30 15:00', '17:30 19:00'];\n  activites: Activity[] = [];\n  activityTypes: ActivityType[] = [];\n  monitors: Monitors[] = [];\n  isModalOpen: boolean = false;\n  // Modal variables\n  activityTypeSelected: ActivityType;\n  selectedMonitorsName: string[];\n  selectedMonitors: Monitors[];\n  numberMonitors: number[]; // Array of numbers from 0 to activityTypeSelected.numberMonitors\n\n  newActivity: Activity;\n  newActivityHour: string;\n\n  constructor(private globalApi: GlobalApiService) {\n    this.activites = this.globalApi.activities;\n    this.activityTypes = this.globalApi.activityTypes;\n    this.monitors = this.globalApi.monitors;\n\n    // Modal variables\n    this.activityTypeSelected = this.activityTypes[0];\n    this.selectedMonitorsName = [];\n    this.numberMonitors = [1, 2];\n    this.selectedMonitors = [];\n\n    // Set the new activity\n    this.newActivity = {\n      id: -1,\n      date_start: this.selected,\n      date_end: this.selected,\n      monitors: [],\n      activityType: this.activityTypeSelected\n    };\n    this.newActivityHour = '';\n  }\n\n  ngOnInit() {\n    // Set the first activity type as the default value\n    if (this.activityTypes && this.activityTypes.length > 0) {\n      this.activityTypeSelected = this.activityTypes[0];\n    }\n  }\n\n  sumarDia() {\n    this.selected.setDate(this.selected.getDate() + 1);\n  }\n  restarDia() {\n    this.selected.setDate(this.selected.getDate() - 1);\n  }\n\n  removeActivity(activity: Activity) {\n    // Remove the activity from the global api\n    this.globalApi.removeActivity(activity);\n    // Update the activities array\n    this.activites = this.globalApi.activities;\n  }\n\n  openModal(hours: string) {\n    this.isModalOpen = true;\n    this.newActivityHour = hours;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n    this.modalVariablesDefault();\n  }\n\n  modalVariablesDefault() {\n    this.activityTypeSelected = this.activityTypes[0];\n    this.selectedMonitorsName = [];\n    this.numberMonitors = [1, 2];\n  }\n\n  changeMonitorNumber() {\n    this.numberMonitors = [1, 2];\n  }\n\n  addMonitor(monitor: Monitors) {\n    this.selectedMonitors.push(monitor);\n    return monitor;\n  }\n\n  addActivity() {\n    // Set the start and end hours\n    const startHour = this.newActivityHour.split(' ')[0];\n    this.newActivity.date_start.setHours(parseInt(startHour.split(':')[0]));\n    this.newActivity.date_start.setMinutes(parseInt(startHour.split(':')[1]));\n\n    // Verificar que los datos sean válidos antes de asignarlos\n    if (startHour) {\n      // Find the activity with the corresponding start and end hour\n      const activityToUpdate = this.activites.find((activity) => {\n        const activityStartHour = activity.date_start.getHours();\n        return activityStartHour === parseInt(startHour);\n      });\n\n      if (activityToUpdate) {\n        // Set id to the new activity\n        this.newActivity.id = activityToUpdate.id;\n\n        // Selected monitors\n        this.selectedMonitors = [];\n        for (const monitorName of this.selectedMonitorsName) {\n          const monitor = this.globalApi.findMonitor(monitorName);\n          if (monitor) {\n            this.selectedMonitors.push(monitor);\n          }\n        }\n\n        // Set monitors to the new activity\n        this.newActivity.monitors = this.selectedMonitors;\n\n        // Replace the activity with the new activity in the activities array\n        this.globalApi.replaceActivity(this.newActivity);\n\n        // Update the activities array\n        this.activites = this.globalApi.activities;\n\n        // Close the modal\n        this.closeModal();\n      } else {\n        // Handle error or display a message indicating that no activity was found\n        console.error('No activity found for the specified start and end hour');\n      }\n    } else {\n      // Handle error or display a message indicating invalid data\n      console.error('Invalid start or end hour');\n    }\n  }\n}\n\n@NgModule({\n  declarations: [ActivitiesComponent],\n  imports: [CommonModule, MatCardModule, MatDatepickerModule, MatNativeDateModule, FormsModule],\n  providers: [GlobalApiService],\n  exports: [ActivitiesComponent]\n})\nexport class ActivitiesModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Activity.html":{"url":"interfaces/Activity.html","title":"interface - Activity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activityType\n                                        \n                                \n                                \n                                        \n                                            date_end\n                                        \n                                \n                                \n                                        \n                                            date_start\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            monitors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activityType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activityType:         ActivityType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivityType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date_end:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date_start:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monitors:         Monitors[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Monitors[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Activity {\n  id: number;\n  activityType: ActivityType;\n  monitors: Monitors[];\n  date_start: Date;\n  date_end: Date;\n}\n\nexport interface ActivityType {\n  id: number;\n  name: ActivityTypeEnum;\n  numberMonitors: number;\n}\n\nexport enum ActivityTypeEnum {\n  BodyPump = \"BodyPump\",\n  Spinning = \"Spinning\",\n  Pilates = \"Pilates\"\n}\n\nexport interface Monitors {\n  id: number;\n  name: string;\n  email: string;\n  phone?: string;\n  photo?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalApiService {\n  activities: Activity[];\n  monitors: Monitors[];\n  activityTypes: ActivityType[];\n\n  constructor() {\n    this.activityTypes = [\n      {\n        id: 1,\n        name: ActivityTypeEnum.BodyPump,\n        numberMonitors: 1\n      },\n      {\n        id: 2,\n        name: ActivityTypeEnum.Pilates,\n        numberMonitors: 1\n      },\n      {\n        id: 3,\n        name: ActivityTypeEnum.Spinning,\n        numberMonitors: 2\n      },\n    ];\n\n    this.monitors = [\n      {\n        id: 0,\n        name: 'Juan',\n        email: 'juan@gmail.com',\n        phone: '123890567',\n      },\n      {\n        id: 1,\n        name: 'Arkaitz',\n        email: 'arkaitzcs@gmail.com',\n        phone: '666666666',\n      },\n      {\n        id: 2,\n        name: 'Ander',\n        email: 'andeer.1@gmail.com',\n      },\n      {\n        id: 3,\n        name: 'Jon',\n        email: 'jon@cuatrovientos.org',\n        phone: '123456789',\n      }\n    ];\n    this.activities = [\n      {\n        id: 1,\n        activityType: this.activityTypes[1],\n        monitors: [\n          this.monitors[0]\n        ],\n        date_start: new Date('2021-06-01T10:00:00'),\n        date_end: new Date('2021-06-01T11:30:00')\n      },\n      {\n        id: 2,\n        activityType: this.activityTypes[0],\n        monitors: [],\n        date_start: new Date('2021-06-01T13:30:00'),\n        date_end: new Date('2021-06-01T15:00:00')\n      },\n      {\n        id: 3,\n        activityType: this.activityTypes[2],\n        monitors: [\n          this.monitors[2], this.monitors[1]\n        ],\n        date_start: new Date('2021-06-01T17:30:00'),\n        date_end: new Date('2021-06-01T19:00:00')\n      },\n    ];\n  }\n\n  getActivities(): Activity[] {\n    return this.activities;\n  }\n\n  getMonitors(): Monitors[] {\n    return this.monitors;\n  }\n\n  addActivity(activity: Activity): void {\n    this.activities.push(activity);\n  }\n\n  addMonitor(monitor: Monitors): void {\n    this.monitors.push(monitor);\n  }\n\n  removeActivity(activity: Activity): void {\n    // Remove monitors from the activity to don't show them in acitivities\n    activity.monitors = [];\n  }\n\n  replaceActivity(newActivity: Activity): void {\n    this.activities = this.activities.map(a => a.id === newActivity.id ? newActivity : a); // Replace the activity\n  }\n\n  removeMonitor(monitor: Monitors): void {\n    this.monitors = this.monitors.filter(m => m.id !== monitor.id);\n  }\n\n  getLastId(): number {\n    return this.activities[this.activities.length - 1].id;\n  }\n\n  updateMonitor(id: number, monitor: Monitors): void {\n    this.monitors = this.monitors.map(m => m.id === id ? monitor : m);\n  }\n\n  findMonitor(name: string): Monitors | undefined {\n    return this.monitors.find(m => m.name === name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActivityType.html":{"url":"interfaces/ActivityType.html","title":"interface - ActivityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActivityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberMonitors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         ActivityTypeEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivityTypeEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberMonitors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberMonitors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Activity {\n  id: number;\n  activityType: ActivityType;\n  monitors: Monitors[];\n  date_start: Date;\n  date_end: Date;\n}\n\nexport interface ActivityType {\n  id: number;\n  name: ActivityTypeEnum;\n  numberMonitors: number;\n}\n\nexport enum ActivityTypeEnum {\n  BodyPump = \"BodyPump\",\n  Spinning = \"Spinning\",\n  Pilates = \"Pilates\"\n}\n\nexport interface Monitors {\n  id: number;\n  name: string;\n  email: string;\n  phone?: string;\n  photo?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalApiService {\n  activities: Activity[];\n  monitors: Monitors[];\n  activityTypes: ActivityType[];\n\n  constructor() {\n    this.activityTypes = [\n      {\n        id: 1,\n        name: ActivityTypeEnum.BodyPump,\n        numberMonitors: 1\n      },\n      {\n        id: 2,\n        name: ActivityTypeEnum.Pilates,\n        numberMonitors: 1\n      },\n      {\n        id: 3,\n        name: ActivityTypeEnum.Spinning,\n        numberMonitors: 2\n      },\n    ];\n\n    this.monitors = [\n      {\n        id: 0,\n        name: 'Juan',\n        email: 'juan@gmail.com',\n        phone: '123890567',\n      },\n      {\n        id: 1,\n        name: 'Arkaitz',\n        email: 'arkaitzcs@gmail.com',\n        phone: '666666666',\n      },\n      {\n        id: 2,\n        name: 'Ander',\n        email: 'andeer.1@gmail.com',\n      },\n      {\n        id: 3,\n        name: 'Jon',\n        email: 'jon@cuatrovientos.org',\n        phone: '123456789',\n      }\n    ];\n    this.activities = [\n      {\n        id: 1,\n        activityType: this.activityTypes[1],\n        monitors: [\n          this.monitors[0]\n        ],\n        date_start: new Date('2021-06-01T10:00:00'),\n        date_end: new Date('2021-06-01T11:30:00')\n      },\n      {\n        id: 2,\n        activityType: this.activityTypes[0],\n        monitors: [],\n        date_start: new Date('2021-06-01T13:30:00'),\n        date_end: new Date('2021-06-01T15:00:00')\n      },\n      {\n        id: 3,\n        activityType: this.activityTypes[2],\n        monitors: [\n          this.monitors[2], this.monitors[1]\n        ],\n        date_start: new Date('2021-06-01T17:30:00'),\n        date_end: new Date('2021-06-01T19:00:00')\n      },\n    ];\n  }\n\n  getActivities(): Activity[] {\n    return this.activities;\n  }\n\n  getMonitors(): Monitors[] {\n    return this.monitors;\n  }\n\n  addActivity(activity: Activity): void {\n    this.activities.push(activity);\n  }\n\n  addMonitor(monitor: Monitors): void {\n    this.monitors.push(monitor);\n  }\n\n  removeActivity(activity: Activity): void {\n    // Remove monitors from the activity to don't show them in acitivities\n    activity.monitors = [];\n  }\n\n  replaceActivity(newActivity: Activity): void {\n    this.activities = this.activities.map(a => a.id === newActivity.id ? newActivity : a); // Replace the activity\n  }\n\n  removeMonitor(monitor: Monitors): void {\n    this.monitors = this.monitors.filter(m => m.id !== monitor.id);\n  }\n\n  getLastId(): number {\n    return this.activities[this.activities.length - 1].id;\n  }\n\n  updateMonitor(id: number, monitor: Monitors): void {\n    this.monitors = this.monitors.map(m => m.id === id ? monitor : m);\n  }\n\n  findMonitor(name: string): Monitors | undefined {\n    return this.monitors.find(m => m.name === name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                                HeaderComponent\n                                FooterSelectorsComponent\n                \n            \n\n\n            \n                styles\n                \n  \n  \n            \n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '4V-GYM'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { ActivitiesComponent } from './activities/activities.component';\nimport { MonitorsComponent } from './monitors/monitors.component';\nimport { FooterSelectorsComponent } from './footer-selectors/footer-selectors.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet,HeaderComponent,FooterSelectorsComponent],\n  template: `\n  \n  \n  `,\n  styles: \n  `\n  \n  `\n})\nexport class AppComponent {\n  title = '4V-GYM';\n}\n\n    \n\n\n    \n            \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActivitiesComponent', 'selector': 'app-activities'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterSelectorsComponent', 'selector': 'app-footer-selectors'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MonitorsComponent', 'selector': 'app-monitors'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterSelectorsComponent.html":{"url":"components/FooterSelectorsComponent.html","title":"component - FooterSelectorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterSelectorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer-selectors/footer-selectors.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer-selectors\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                MonitorsComponent\n                                ActivitiesModule\n                            MatTabsModule\n                            MatIconModule\n                \n            \n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n  \n    \n        \n          \n          \n            calendar_clock\n          \n            Actividades\n          \n          \n        \n\n        \n          \n            person\n            Monitores\n          \n          \n        \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MonitorsComponent } from '../monitors/monitors.component';\nimport { ActivitiesModule } from '../activities/activities.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n\n@Component({\n  selector: 'app-footer-selectors',\n  standalone: true,\n  imports: [MonitorsComponent, ActivitiesModule, MatTabsModule, MatIconModule],\n  template: `\n  \n    \n      \n          \n            \n            \n              calendar_clock\n            \n              Actividades\n            \n            \n          \n\n          \n            \n              person\n              Monitores\n            \n            \n          \n      \n  \n`,\n  styles: ``\n})\nexport class FooterSelectorsComponent {\n\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              calendar_clock                      Actividades                                                          person            Monitores                                '\n    var COMPONENTS = [{'name': 'ActivitiesComponent', 'selector': 'app-activities'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterSelectorsComponent', 'selector': 'app-footer-selectors'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MonitorsComponent', 'selector': 'app-monitors'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterSelectorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalApiService.html":{"url":"injectables/GlobalApiService.html","title":"injectable - GlobalApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activities\n                            \n                            \n                                activityTypes\n                            \n                            \n                                monitors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActivity\n                            \n                            \n                                addMonitor\n                            \n                            \n                                findMonitor\n                            \n                            \n                                getActivities\n                            \n                            \n                                getLastId\n                            \n                            \n                                getMonitors\n                            \n                            \n                                removeActivity\n                            \n                            \n                                removeMonitor\n                            \n                            \n                                replaceActivity\n                            \n                            \n                                updateMonitor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/global-api.service.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActivity\n                        \n                    \n                \n            \n            \n                \naddActivity(activity: Activity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            Activity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMonitor\n                        \n                    \n                \n            \n            \n                \naddMonitor(monitor: Monitors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                monitor\n                                            \n                                                            Monitors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMonitor\n                        \n                    \n                \n            \n            \n                \nfindMonitor(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Monitors | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActivities\n                        \n                    \n                \n            \n            \n                \ngetActivities()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Activity[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastId\n                        \n                    \n                \n            \n            \n                \ngetLastId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMonitors\n                        \n                    \n                \n            \n            \n                \ngetMonitors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Monitors[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActivity\n                        \n                    \n                \n            \n            \n                \nremoveActivity(activity: Activity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            Activity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMonitor\n                        \n                    \n                \n            \n            \n                \nremoveMonitor(monitor: Monitors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                monitor\n                                            \n                                                            Monitors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceActivity\n                        \n                    \n                \n            \n            \n                \nreplaceActivity(newActivity: Activity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newActivity\n                                            \n                                                            Activity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMonitor\n                        \n                    \n                \n            \n            \n                \nupdateMonitor(id: number, monitor: Monitors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/global-api.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                monitor\n                                            \n                                                            Monitors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Activity[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/global-api.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivityType[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/global-api.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Monitors[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/global-api.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Activity {\n  id: number;\n  activityType: ActivityType;\n  monitors: Monitors[];\n  date_start: Date;\n  date_end: Date;\n}\n\nexport interface ActivityType {\n  id: number;\n  name: ActivityTypeEnum;\n  numberMonitors: number;\n}\n\nexport enum ActivityTypeEnum {\n  BodyPump = \"BodyPump\",\n  Spinning = \"Spinning\",\n  Pilates = \"Pilates\"\n}\n\nexport interface Monitors {\n  id: number;\n  name: string;\n  email: string;\n  phone?: string;\n  photo?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalApiService {\n  activities: Activity[];\n  monitors: Monitors[];\n  activityTypes: ActivityType[];\n\n  constructor() {\n    this.activityTypes = [\n      {\n        id: 1,\n        name: ActivityTypeEnum.BodyPump,\n        numberMonitors: 1\n      },\n      {\n        id: 2,\n        name: ActivityTypeEnum.Pilates,\n        numberMonitors: 1\n      },\n      {\n        id: 3,\n        name: ActivityTypeEnum.Spinning,\n        numberMonitors: 2\n      },\n    ];\n\n    this.monitors = [\n      {\n        id: 0,\n        name: 'Juan',\n        email: 'juan@gmail.com',\n        phone: '123890567',\n      },\n      {\n        id: 1,\n        name: 'Arkaitz',\n        email: 'arkaitzcs@gmail.com',\n        phone: '666666666',\n      },\n      {\n        id: 2,\n        name: 'Ander',\n        email: 'andeer.1@gmail.com',\n      },\n      {\n        id: 3,\n        name: 'Jon',\n        email: 'jon@cuatrovientos.org',\n        phone: '123456789',\n      }\n    ];\n    this.activities = [\n      {\n        id: 1,\n        activityType: this.activityTypes[1],\n        monitors: [\n          this.monitors[0]\n        ],\n        date_start: new Date('2021-06-01T10:00:00'),\n        date_end: new Date('2021-06-01T11:30:00')\n      },\n      {\n        id: 2,\n        activityType: this.activityTypes[0],\n        monitors: [],\n        date_start: new Date('2021-06-01T13:30:00'),\n        date_end: new Date('2021-06-01T15:00:00')\n      },\n      {\n        id: 3,\n        activityType: this.activityTypes[2],\n        monitors: [\n          this.monitors[2], this.monitors[1]\n        ],\n        date_start: new Date('2021-06-01T17:30:00'),\n        date_end: new Date('2021-06-01T19:00:00')\n      },\n    ];\n  }\n\n  getActivities(): Activity[] {\n    return this.activities;\n  }\n\n  getMonitors(): Monitors[] {\n    return this.monitors;\n  }\n\n  addActivity(activity: Activity): void {\n    this.activities.push(activity);\n  }\n\n  addMonitor(monitor: Monitors): void {\n    this.monitors.push(monitor);\n  }\n\n  removeActivity(activity: Activity): void {\n    // Remove monitors from the activity to don't show them in acitivities\n    activity.monitors = [];\n  }\n\n  replaceActivity(newActivity: Activity): void {\n    this.activities = this.activities.map(a => a.id === newActivity.id ? newActivity : a); // Replace the activity\n  }\n\n  removeMonitor(monitor: Monitors): void {\n    this.monitors = this.monitors.filter(m => m.id !== monitor.id);\n  }\n\n  getLastId(): number {\n    return this.activities[this.activities.length - 1].id;\n  }\n\n  updateMonitor(id: number, monitor: Monitors): void {\n    this.monitors = this.monitors.map(m => m.id === id ? monitor : m);\n  }\n\n  findMonitor(name: string): Monitors | undefined {\n    return this.monitors.find(m => m.name === name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            MatToolbarModule\n                \n            \n\n\n            \n                styles\n                \n            \n\n            \n                template\n                  \n    \n    \n        4V\n            GYM\n        \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [MatToolbarModule],\n  template: `\n  \n    \n    \n        4V\n            GYM\n        \n    \n\n`,\n  styles: ``\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  4V            GYM            '\n    var COMPONENTS = [{'name': 'ActivitiesComponent', 'selector': 'app-activities'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterSelectorsComponent', 'selector': 'app-footer-selectors'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MonitorsComponent', 'selector': 'app-monitors'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monitors.html":{"url":"interfaces/Monitors.html","title":"interface - Monitors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monitors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/global-api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Activity {\n  id: number;\n  activityType: ActivityType;\n  monitors: Monitors[];\n  date_start: Date;\n  date_end: Date;\n}\n\nexport interface ActivityType {\n  id: number;\n  name: ActivityTypeEnum;\n  numberMonitors: number;\n}\n\nexport enum ActivityTypeEnum {\n  BodyPump = \"BodyPump\",\n  Spinning = \"Spinning\",\n  Pilates = \"Pilates\"\n}\n\nexport interface Monitors {\n  id: number;\n  name: string;\n  email: string;\n  phone?: string;\n  photo?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalApiService {\n  activities: Activity[];\n  monitors: Monitors[];\n  activityTypes: ActivityType[];\n\n  constructor() {\n    this.activityTypes = [\n      {\n        id: 1,\n        name: ActivityTypeEnum.BodyPump,\n        numberMonitors: 1\n      },\n      {\n        id: 2,\n        name: ActivityTypeEnum.Pilates,\n        numberMonitors: 1\n      },\n      {\n        id: 3,\n        name: ActivityTypeEnum.Spinning,\n        numberMonitors: 2\n      },\n    ];\n\n    this.monitors = [\n      {\n        id: 0,\n        name: 'Juan',\n        email: 'juan@gmail.com',\n        phone: '123890567',\n      },\n      {\n        id: 1,\n        name: 'Arkaitz',\n        email: 'arkaitzcs@gmail.com',\n        phone: '666666666',\n      },\n      {\n        id: 2,\n        name: 'Ander',\n        email: 'andeer.1@gmail.com',\n      },\n      {\n        id: 3,\n        name: 'Jon',\n        email: 'jon@cuatrovientos.org',\n        phone: '123456789',\n      }\n    ];\n    this.activities = [\n      {\n        id: 1,\n        activityType: this.activityTypes[1],\n        monitors: [\n          this.monitors[0]\n        ],\n        date_start: new Date('2021-06-01T10:00:00'),\n        date_end: new Date('2021-06-01T11:30:00')\n      },\n      {\n        id: 2,\n        activityType: this.activityTypes[0],\n        monitors: [],\n        date_start: new Date('2021-06-01T13:30:00'),\n        date_end: new Date('2021-06-01T15:00:00')\n      },\n      {\n        id: 3,\n        activityType: this.activityTypes[2],\n        monitors: [\n          this.monitors[2], this.monitors[1]\n        ],\n        date_start: new Date('2021-06-01T17:30:00'),\n        date_end: new Date('2021-06-01T19:00:00')\n      },\n    ];\n  }\n\n  getActivities(): Activity[] {\n    return this.activities;\n  }\n\n  getMonitors(): Monitors[] {\n    return this.monitors;\n  }\n\n  addActivity(activity: Activity): void {\n    this.activities.push(activity);\n  }\n\n  addMonitor(monitor: Monitors): void {\n    this.monitors.push(monitor);\n  }\n\n  removeActivity(activity: Activity): void {\n    // Remove monitors from the activity to don't show them in acitivities\n    activity.monitors = [];\n  }\n\n  replaceActivity(newActivity: Activity): void {\n    this.activities = this.activities.map(a => a.id === newActivity.id ? newActivity : a); // Replace the activity\n  }\n\n  removeMonitor(monitor: Monitors): void {\n    this.monitors = this.monitors.filter(m => m.id !== monitor.id);\n  }\n\n  getLastId(): number {\n    return this.activities[this.activities.length - 1].id;\n  }\n\n  updateMonitor(id: number, monitor: Monitors): void {\n    this.monitors = this.monitors.map(m => m.id === id ? monitor : m);\n  }\n\n  findMonitor(name: string): Monitors | undefined {\n    return this.monitors.find(m => m.name === name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonitorsComponent.html":{"url":"components/MonitorsComponent.html","title":"component - MonitorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MonitorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/monitors/monitors.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-monitors\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n\n  \n  \n\n\n\n\n    \n\n\n\n\n  \n  \n    \n  \n  \n  @for (data of filteredCards; track $index) {\n    @if ($index >= firstCardIndex) {\n      @if ($index \n        \n          \n          \n            \n          \n          \n            \n          \n          \n          \n            \n          \n          \n            {{data.name}}\n            {{data.email}}\n            {{data.phone}}\n          \n        \n      }\n    }\n  }\n  \n  \n    \n  \n\n\n\n@if (isModalOpen) {\n\n  \n\n    \n      \n        \n        \n          \n          \n        \n        \n        \n          \n          \n          \n          \n          \n          \n\n          \n          \n            \n              ACEPTAR\n            \n            \n              CANCELAR\n            \n          \n        \n      \n    \n  \n\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                email\n                            \n                            \n                                filteredCards\n                            \n                            \n                                firstCardIndex\n                            \n                            \n                                globalApi\n                            \n                            \n                                index\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                searchString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getDefaultEmail\n                            \n                            \n                                getDefaultIndex\n                            \n                            \n                                getDefaultName\n                            \n                            \n                                getDefaultPhone\n                            \n                            \n                                openModal\n                            \n                            \n                                openModalEdit\n                            \n                            \n                                removeMonitor\n                            \n                            \n                                scrollLeft\n                            \n                            \n                                scrollRight\n                            \n                            \n                                search\n                            \n                            \n                                setDefaultEmail\n                            \n                            \n                                setDefaultIndex\n                            \n                            \n                                setDefaultName\n                            \n                            \n                                setDefaultPhone\n                            \n                            \n                                setMonitor\n                            \n                            \n                                updateMonitor\n                            \n                            \n                                updateMonitors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultEmail\n                        \n                    \n                \n            \n            \n                \ngetDefaultEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultIndex\n                        \n                    \n                \n            \n            \n                \ngetDefaultIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultName\n                        \n                    \n                \n            \n            \n                \ngetDefaultName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultPhone\n                        \n                    \n                \n            \n            \n                \ngetDefaultPhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalEdit\n                        \n                    \n                \n            \n            \n                \nopenModalEdit(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMonitor\n                        \n                    \n                \n            \n            \n                \nremoveMonitor(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollLeft\n                        \n                    \n                \n            \n            \n                \nscrollLeft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollRight\n                        \n                    \n                \n            \n            \n                \nscrollRight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultEmail\n                        \n                    \n                \n            \n            \n                \nsetDefaultEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultIndex\n                        \n                    \n                \n            \n            \n                \nsetDefaultIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultName\n                        \n                    \n                \n            \n            \n                \nsetDefaultName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultPhone\n                        \n                    \n                \n            \n            \n                \nsetDefaultPhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMonitor\n                        \n                    \n                \n            \n            \n                \nsetMonitor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMonitor\n                        \n                    \n                \n            \n            \n                \nupdateMonitor(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMonitors\n                        \n                    \n                \n            \n            \n                \nupdateMonitors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/monitors/monitors.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Monitors[]\n\n                    \n                \n                \n                    \n                        Default value : this.globalApi.monitors\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Monitors[]\n\n                    \n                \n                \n                    \n                        Default value : this.cards\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstCardIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        globalApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalApiService\n\n                    \n                \n                \n                    \n                        Default value : new GlobalApiService()\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Nombre'\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Teléfono'\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/monitors/monitors.component.ts:109\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { GlobalApiService, Monitors } from '../global-api.service';\n\n//! TODO Add card icons/buttons and add button to add monitors\n\n@Component({\n  selector: 'app-monitors',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    \n    \n      \n      \n    \n\n    \n    \n        \n    \n\n    \n    \n      \n      \n        \n      \n      \n      @for (data of filteredCards; track $index) {\n        @if ($index >= firstCardIndex) { \n          @if ($index \n            \n              \n              \n                \n              \n              \n                \n              \n              \n              \n                \n              \n              \n                {{data.name}}\n                {{data.email}}\n                {{data.phone}}\n              \n            \n          }\n        }\n      }\n      \n      \n        \n      \n    \n\n    \n    @if (isModalOpen) {\n    \n      \n\n        \n          \n            \n            \n              \n              \n            \n            \n            \n              \n              \n              \n              \n              \n              \n\n              \n              \n                \n                  ACEPTAR\n                \n                \n                  CANCELAR\n                \n              \n            \n          \n        \n      \n    \n    }\n    `,\n  styles: ``\n})\nexport class MonitorsComponent {\n  globalApi: GlobalApiService = new GlobalApiService();\n  cards: Monitors[] = this.globalApi.monitors;\n\n  filteredCards: Monitors[] = this.cards; // cards filtered by search\n\n  firstCardIndex = 0; // index of the first card to show\n  searchString = ''; // value of the search input\n\n  isModalOpen = false; // true if the modal is open\n\n  // Default values for the inputs\n  index: number = -1; setDefaultIndex() { this.index = -1; }; getDefaultIndex() { return -1; };\n  name: string = 'Nombre'; setDefaultName() { this.name = 'Nombre'; }; getDefaultName() { return 'Nombre'; };\n  email: string = 'Email'; setDefaultEmail() { this.email = 'Email'; }; getDefaultEmail() { return 'Email'; };\n  phone: string = 'Teléfono'; setDefaultPhone() { this.phone = 'Teléfono'; }; getDefaultPhone() { return 'Teléfono'; };\n\n  scrollLeft() {\n    if (this.firstCardIndex > 0) {\n      this.firstCardIndex--;\n    }\n  }\n\n  scrollRight() {\n    if (this.firstCardIndex  card.name.toLowerCase().startsWith(this.searchString.toLowerCase()));\n    } else {\n      this.filteredCards = this.cards;\n    }\n  }\n\n  removeMonitor(index: number) {\n    this.globalApi.removeMonitor(this.cards[index]); // Remove the monitor from the global api\n    this.updateMonitors(); // Update the cards array\n  }\n\n  openModal() {\n    this.isModalOpen = true; // Open the modal\n    // Set the default values for the inputs\n    this.setDefaultIndex();\n    this.setDefaultName();\n    this.setDefaultEmail();\n    this.setDefaultPhone();\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n\n  openModalEdit(index: number) {\n    this.isModalOpen = true; // Open the modal\n    // Set the values for the inputs\n    this.index = index;\n    this.name = this.filteredCards[index].name;\n    this.email = this.filteredCards[index].email;\n    this.phone = this.filteredCards[index].phone ?? '';\n  }\n\n  setMonitor() {\n    this.closeModal(); // Close the modal\n\n    this.globalApi.addMonitor({\n      id: this.globalApi.getLastId() + 1,\n      name: this.name,\n      email: this.email,\n      phone: this.phone\n    }); // Add the monitor to the global api\n\n    this.cards = this.globalApi.monitors; // Update the cards array\n\n    this.search(); // Update the filtered cards\n  }\n\n  updateMonitors() {\n    this.cards = this.globalApi.monitors; // Update the cards array\n    this.search(); // Update the filtered cards\n    this.filteredCards = this.cards; // Update the filtered cards\n  }\n\n  updateMonitor(index: number) {\n    if (this.index === this.getDefaultIndex()) {\n      this.setMonitor();\n      return;\n    }\n\n    this.globalApi.updateMonitor(this.cards[index].id, {\n      id: this.cards[index].id,\n      name: this.name,\n      email: this.email,\n      phone: this.phone\n    }); // Update the monitor in the global api\n    this.updateMonitors(); // Update the cards array\n    this.closeModal(); // Close the modal\n  }\n\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      @for (data of filteredCards; track $index) {    @if ($index >= firstCardIndex) {      @if ($index                                                                                                                                                   {{data.name}}            {{data.email}}            {{data.phone}}                        }    }  }          @if (isModalOpen) {                                                                                                                                                                                  ACEPTAR                                      CANCELAR                                          }'\n    var COMPONENTS = [{'name': 'ActivitiesComponent', 'selector': 'app-activities'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterSelectorsComponent', 'selector': 'app-footer-selectors'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'MonitorsComponent', 'selector': 'app-monitors'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MonitorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/activities/activities.component.ts\n            \n            component\n            ActivitiesComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer-selectors/footer-selectors.component.ts\n            \n            component\n            FooterSelectorsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/global-api.service.ts\n            \n            injectable\n            GlobalApiService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/global-api.service.ts\n            \n            interface\n            Activity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/global-api.service.ts\n            \n            interface\n            ActivityType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/global-api.service.ts\n            \n            interface\n            Monitors\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/monitors/monitors.component.ts\n            \n            component\n            MonitorsComponent\n            \n                0 %\n                (0/29)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/cdk : ^17.0.5\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/material : ^17.0.5\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivityTypeEnum   (src/.../global-api.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/global-api.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivityTypeEnum\n                    \n                \n                        \n                            \n                                 BodyPump\n                            \n                        \n                        \n                            \n                                Value : BodyPump\n                            \n                        \n                        \n                            \n                                 Spinning\n                            \n                        \n                        \n                            \n                                Value : Spinning\n                            \n                        \n                        \n                            \n                                 Pilates\n                            \n                        \n                        \n                            \n                                Value : Pilates\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n4V Gym\nThis is a web application for managing activities in a gym. It was created by Mikel Echeverria.\nGetting Started 🚀\nThese instructions will help you set up your development environment to run the project locally.\nPrerequisites 📋\nWhat you need to install and how to install them.\n\nAngular CLI - Install Angular CLI\nNPM - Package manager\n\nInstallation 🔧\nA series of example steps you can take to set up your development environment.\nClone the repository:\nExample :git clone https://github.com/MikelEcheverria/4VGym.gitInstall dependencies:\nExample :npm installProject Generated with 🛠️\nThis project was generated with Angular CLI version 17.0.10.\nTo install Angular CLI, run:\nExample :npm install -g @angular/cliOn Windows client computers, PowerShell script execution is disabled by default. To enable the execution of\nPowerShell scripts, which is necessary for global npm binaries, set the following policy:\nExample :Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSignedIf you encounter an error with npm install, try using npm install --legacy-peer-deps.\nRunning Tests ⚙️\nExplain how to run automated tests for the system.\nExample :npm run testDeployment 📦\nAdd additional deployment notes here.\nExample :ng build --prodTo run the application locally, use the following command:\nExample :ng serve\nBuilt With 🛠️\n\nAngular - The web framework used\nNPM - Package manager\n\nAuthor ✒️\n\nMikel Echeverria - Initial work - MikelEcheverria\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActivitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivitiesModule\n\n\n\ncluster_ActivitiesModule_declarations\n\n\n\ncluster_ActivitiesModule_exports\n\n\n\ncluster_ActivitiesModule_providers\n\n\n\n\nActivitiesComponent\n\nActivitiesComponent\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nActivitiesModule -->\n\nActivitiesComponent->ActivitiesModule\n\n\n\n\n\nActivitiesComponent \n\nActivitiesComponent \n\nActivitiesComponent  -->\n\nActivitiesModule->ActivitiesComponent \n\n\n\n\n\nGlobalApiService\n\nGlobalApiService\n\nActivitiesModule -->\n\nGlobalApiService->ActivitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes), provideAnimations(), provideAnimations()]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
